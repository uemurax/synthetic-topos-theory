#lang morg

(require "lib/article/definition.rkt"
         morg/math
         "lib/math/lex-cocomp.rkt"
         "lib/math/function.rkt"
         "lib/math/functor.rkt")

(define U "U")
(define C "C")
(define F "F")

@definition[
  #:id (current-id)
  @paragraph{
    Let @(math U) be a universe.
    We define @(math (free-lex-cocomp-pt U))
    to be the free lex @(math U)-cocomplete category
    generated by one object @(math generic-object).
    That is, for any lex @(math U)-cocomplete category @(math C),
    the functor
    @disp{
      @(math ((F . /-> . (F . $ . generic-object))
              . is-functor .
              ((free-lex-cocomp-pt U) . (lex-cocomp-functor U) . C)
              C))
    }
    is an equivalence.
  }
]
